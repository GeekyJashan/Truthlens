{"ast":null,"code":"var _jsxFileName = \"/Users/writesonic/Documents/major_project/truthlens/src/components/ui/button.tsx\";\nimport * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cva } from 'class-variance-authority';\nimport { cn } from '@/lib/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttonVariants = cva('inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0', {\n  variants: {\n    variant: {\n      default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n      destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n      outline: 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n      secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n      ghost: 'hover:bg-accent hover:text-accent-foreground',\n      link: 'text-primary underline-offset-4 hover:underline'\n    },\n    size: {\n      default: 'h-10 px-4 py-2',\n      sm: 'h-9 rounded-md px-3',\n      lg: 'h-11 rounded-md px-8',\n      icon: 'h-10 w-10'\n    }\n  },\n  defaultVariants: {\n    variant: 'default',\n    size: 'default'\n  }\n});\nconst Button = /*#__PURE__*/React.forwardRef(_c = ({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}, ref) => {\n  const Comp = asChild ? Slot : 'button';\n  return /*#__PURE__*/_jsxDEV(Comp, {\n    className: cn(buttonVariants({\n      variant,\n      size,\n      className\n    })),\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n});\n_c2 = Button;\nButton.displayName = 'Button';\nexport { Button, buttonVariants };\nvar _c, _c2;\n$RefreshReg$(_c, \"Button$React.forwardRef\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"names":["React","Slot","cva","cn","jsxDEV","_jsxDEV","buttonVariants","variants","variant","default","destructive","outline","secondary","ghost","link","size","sm","lg","icon","defaultVariants","Button","forwardRef","_c","className","asChild","props","ref","Comp","fileName","_jsxFileName","lineNumber","columnNumber","_c2","displayName","$RefreshReg$"],"sources":["/Users/writesonic/Documents/major_project/truthlens/src/components/ui/button.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/lib/utils'\n\nconst buttonVariants = cva(\n\t'inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault: 'bg-primary text-primary-foreground hover:bg-primary/90',\n\t\t\t\tdestructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n\t\t\t\toutline: 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tsecondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n\t\t\t\tghost: 'hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tlink: 'text-primary underline-offset-4 hover:underline',\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tdefault: 'h-10 px-4 py-2',\n\t\t\t\tsm: 'h-9 rounded-md px-3',\n\t\t\t\tlg: 'h-11 rounded-md px-8',\n\t\t\t\ticon: 'h-10 w-10',\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: 'default',\n\t\t\tsize: 'default',\n\t\t},\n\t}\n)\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement>, VariantProps<typeof buttonVariants> {\n\tasChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(({ className, variant, size, asChild = false, ...props }, ref) => {\n\tconst Comp = asChild ? Slot : 'button'\n\treturn <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} />\n})\nButton.displayName = 'Button'\n\nexport { Button, buttonVariants }\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,SAASC,GAAG,QAA2B,0BAA0B;AAEjE,SAASC,EAAE,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,cAAc,GAAGJ,GAAG,CACzB,0VAA0V,EAC1V;EACCK,QAAQ,EAAE;IACTC,OAAO,EAAE;MACRC,OAAO,EAAE,wDAAwD;MACjEC,WAAW,EAAE,oEAAoE;MACjFC,OAAO,EAAE,gFAAgF;MACzFC,SAAS,EAAE,8DAA8D;MACzEC,KAAK,EAAE,8CAA8C;MACrDC,IAAI,EAAE;IACP,CAAC;IACDC,IAAI,EAAE;MACLN,OAAO,EAAE,gBAAgB;MACzBO,EAAE,EAAE,qBAAqB;MACzBC,EAAE,EAAE,sBAAsB;MAC1BC,IAAI,EAAE;IACP;EACD,CAAC;EACDC,eAAe,EAAE;IAChBX,OAAO,EAAE,SAAS;IAClBO,IAAI,EAAE;EACP;AACD,CACD,CAAC;AAMD,MAAMK,MAAM,gBAAGpB,KAAK,CAACqB,UAAU,CAAAC,EAAA,GAAiCA,CAAC;EAAEC,SAAS;EAAEf,OAAO;EAAEO,IAAI;EAAES,OAAO,GAAG,KAAK;EAAE,GAAGC;AAAM,CAAC,EAAEC,GAAG,KAAK;EACjI,MAAMC,IAAI,GAAGH,OAAO,GAAGvB,IAAI,GAAG,QAAQ;EACtC,oBAAOI,OAAA,CAACsB,IAAI;IAACJ,SAAS,EAAEpB,EAAE,CAACG,cAAc,CAAC;MAAEE,OAAO;MAAEO,IAAI;MAAEQ;IAAU,CAAC,CAAC,CAAE;IAACG,GAAG,EAAEA,GAAI;IAAA,GAAKD;EAAK;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAClG,CAAC,CAAC;AAAAC,GAAA,GAHIZ,MAAM;AAIZA,MAAM,CAACa,WAAW,GAAG,QAAQ;AAE7B,SAASb,MAAM,EAAEd,cAAc;AAAE,IAAAgB,EAAA,EAAAU,GAAA;AAAAE,YAAA,CAAAZ,EAAA;AAAAY,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}