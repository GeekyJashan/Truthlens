{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport function useDarkMode() {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    if (typeof window !== 'undefined') {\n      return document.documentElement.classList.contains('dark');\n    }\n    return false;\n  });\n  useEffect(() => {\n    const root = window.document.documentElement;\n    if (isDarkMode) {\n      root.classList.add('dark');\n    } else {\n      root.classList.remove('dark');\n    }\n  }, [isDarkMode]);\n  return {\n    isDarkMode,\n    setIsDarkMode\n  };\n}\n_s(useDarkMode, \"hl6jcdPt7SCtLxD1JBwLiDfaw60=\");","map":{"version":3,"names":["useState","useEffect","useDarkMode","_s","isDarkMode","setIsDarkMode","window","document","documentElement","classList","contains","root","add","remove"],"sources":["/Users/writesonic/Documents/major_project/truthlens/src/hooks/useDarkMode.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport function useDarkMode() {\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    if (typeof window !== 'undefined') {\n      return document.documentElement.classList.contains('dark');\n    }\n    return false;\n  });\n\n  useEffect(() => {\n    const root = window.document.documentElement;\n    if (isDarkMode) {\n      root.classList.add('dark');\n    } else {\n      root.classList.remove('dark');\n    }\n  }, [isDarkMode]);\n\n  return { isDarkMode, setIsDarkMode };\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,MAAM;IACjD,IAAI,OAAOM,MAAM,KAAK,WAAW,EAAE;MACjC,OAAOC,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,QAAQ,CAAC,MAAM,CAAC;IAC5D;IACA,OAAO,KAAK;EACd,CAAC,CAAC;EAEFT,SAAS,CAAC,MAAM;IACd,MAAMU,IAAI,GAAGL,MAAM,CAACC,QAAQ,CAACC,eAAe;IAC5C,IAAIJ,UAAU,EAAE;MACdO,IAAI,CAACF,SAAS,CAACG,GAAG,CAAC,MAAM,CAAC;IAC5B,CAAC,MAAM;MACLD,IAAI,CAACF,SAAS,CAACI,MAAM,CAAC,MAAM,CAAC;IAC/B;EACF,CAAC,EAAE,CAACT,UAAU,CAAC,CAAC;EAEhB,OAAO;IAAEA,UAAU;IAAEC;EAAc,CAAC;AACtC;AAACF,EAAA,CAlBeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}